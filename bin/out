#!/bin/bash
set -euo pipefail

exec 3>&1 # use fd 3 for script output
exec 1>&2 # send normal stdout to stderr for logging

source "$(dirname "$0")/common.sh"

deploy() {
    DEPLOYMENT=$1
    CONTAINER=$2
    IMAGE=$3

    [ -n "$DEPLOYMENT" ] || exit 1
    [ -n "$IMAGE" ] || exit 1
    [ -n "$CONTAINER" ] || exit 1

    $KUBECTL set image "deployment/$DEPLOYMENT" "$CONTAINER=$IMAGE"

    $KUBECTL rollout status "deployment/$DEPLOYMENT"
}

rollingupdate() {
    RC=$1
    IMAGE=$2

    [ -n "$RC" ] || exit 1
    [ -n "$IMAGE" ] || exit 1

    $KUBECTL rolling-update "rc/$RC" --image="$IMAGE"
    # TODO make sure rolling udate is finished
}

start_job() {
    JOB=$1
    IMAGE=$2
    UID=${3:-$(date +%s)}

    [ -n "$JOB" ] || exit 1
    [ -n "$IMAGE" ] || exit 1
    [ -n "$UID" ] || exit 1

    cat "$JOB" | IMAGE=$IMAGE UID=$UID envsubst | $KUBECTL create -f -
    # TODO make sure job is started
}

DEBUG=$(jq -r .source.debug < "$PAYLOAD")
[[ "$DEBUG" == "true" ]] && { echo "Enabling debug mode.";set -x; }

cd "$1"

# get image name
IMG_FILE=$(jq -r .params.image_name < "$PAYLOAD")
IMG=$(cat "$IMG_FILE")
TAG_FILE=$(jq -r .params.image_tag < "$PAYLOAD")
TAG=$(cat "$TAG_FILE")
IMG="$IMG:$TAG"

# get kube resource id
RESOURCE_TYPE=$(jq -r .source.resource_type < "$PAYLOAD")
RESOURCE_NAME=$(jq -r .source.resource_name < "$PAYLOAD")
RESOURCE_PATH=$(jq -r .params.resource_path < "$PAYLOAD")
CONTAINER_NAME=$(jq -r .source.container_name < "$PAYLOAD")

if [[ -z "$RESOURCE_TYPE" ]]; then
    RESOURCE_TYPE=$(jq -r .params.resource_type < "$PAYLOAD")
fi

if [[ -z "$RESOURCE_NAME" ]]; then
    RESOURCE_TYPE=$(jq -r .params.resource_name < "$PAYLOAD")
fi

if [[ "$CONTAINER_NAME" == "null" ]]; then
  CONTAINER_NAME=$RESOURCE_NAME
fi

# do things
case $RESOURCE_TYPE in
    deployment)
    deploy "$RESOURCE_NAME" "$CONTAINER_NAME" "$IMG";;
    replicationcontroller)
    rollingupdate "$RESOURCE_NAME" "$IMG";;
    job)
    start_job "$RESOURCE_PATH" "$IMG" "$(date +%s)";;
    *)
    exit 1
esac

result="$(jq -n "{version:{container:\"$IMG\"}}")"
echo "$result" | jq -s add  >&3
